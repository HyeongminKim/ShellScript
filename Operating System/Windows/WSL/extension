#!/bin/bash

which aptitude &>/dev/null
if [ $? == 0 ]; then
    sudo aptitude safe-upgrade
fi

if [ "$USE_FULL_UPGRADE" == "true" ]; then
    which pip3 &>/dev/null
    if [ $? == 0 ]; then
        python3 -m pip config set global.break-system-packages true
        if [ $? -eq 0 ]; then
            pip3 list --format=freeze | awk -F"==" '{print $1}' | xargs -i pip3 install -U {}
            pip3 cache purge
        fi
    fi

    which pip3.exe &>/dev/null
    if [ $? == 0 ]; then
        pip3.exe list --format=freeze | awk -F"==" '{print $1}' | xargs -i pip3.exe install -U {}
        python.exe -m pip install -U pip
        pip3.exe cache purge
    fi
    echo -e "\n"
fi

which nvim &> /dev/null
if [ $? -eq 0 ]; then
    nvim --version > /dev/null
    if [ $? -ne 0 ]; then
        echo 'neovim package was corrupted.'
        echo 'Please re-install neovim in below link.'
        echo -e "\thttps://github.com/neovim/neovim/releases/latest"
    else
        local=$(nvim --version | grep NVIM | awk '{ print $2 }')
        release=$(curl -fsSL https://github.com/neovim/neovim/releases/latest | grep '<title>' | awk '{ print $3 }')
        if [ "$local" != "$release" ]; then
            echo 'Please download neovim in below link.'
            echo -e "\thttps://github.com/neovim/neovim/releases/latest"
        else
            echo "Neovim is up to date ($local)."
        fi
    fi
fi

which wsl.exe &>/dev/null
if [ $? == 0 ]; then
    wsl.exe --status
    wsl.exe --version
    echo 'Please enter `wsl.exe --update --web-download` command if you wanna check WSL updates.'
fi

which winget.exe &>/dev/null
if [ $? == 0 ]; then
  #     cmd.exe "/c" "winget.exe upgrade --all"
    cmd.exe "/c" "winget.exe upgrade"
    echo -e "\e[m"
fi

if [ -x ~/.local/bin/gitVI_update ]; then
    ~/.local/bin/gitVI_update
fi

which juliaup &> /dev/null
if [ $? -eq 0 ]; then
    juliaup update
fi

which zsh &>/dev/null
if [ $? == 0 ]; then
    /bin/zsh -c "source ~/.zshrc; which omz > /dev/null 2>&1"
    if [ $? == 0 ]; then
        /bin/zsh -c "source ~/.zshrc; omz update" &
        targetPID=$!
        for (( i=0 ; i<=10 ; i++ )); do
            ps | grep $targetPID &> /dev/null
            if [ $? -ne 0 ]; then
                break
            fi
            sleep 1
        done
        ps | grep $targetPID &> /dev/null
        if [ $? -eq 0 ]; then
            kill $targetPID &> /dev/null
        fi
    fi
fi

where.exe flutter &>/dev/null
if [ $? == 0 ]; then
    cmd.exe "/c" "flutter upgrade"
    cmd.exe "/c" "flutter doctor"
fi

which flatpak &> /dev/null
if [ $? -eq 0 ]; then
    flatpak update
fi


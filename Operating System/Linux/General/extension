#!/bin/bash

which aptitude &>/dev/null
if [ $? == 0 ]; then
    sudo aptitude safe-upgrade
fi

if [ "$USE_FULL_UPGRADE" == "true" ]; then
    which pip3 &>/dev/null
    if [ $? == 0 ]; then
        python3 -m pip config set global.break-system-packages true
        if [ $? -eq 0 ]; then
            pip3 list --format=freeze | awk -F"==" '{print $1}' | xargs -i pip3 install -U {}
            pip3 cache purge
        fi
    fi
    echo -e "\n"
fi

which p4 &> /dev/null
if [ $? -eq 0 ]; then
    ~/Documents/Release/ShellScript/Operating\ System/Linux/General/Install\ Perforce
fi

which nvim &> /dev/null
if [ $? -eq 0 ]; then
    nvim --version > /dev/null
    if [ $? -ne 0 ]; then
        echo 'neovim package was corrupted.'
        echo 'Please re-install neovim in below link.'
        echo -e "\thttps://github.com/neovim/neovim/releases/latest"
    else
        local=$(nvim --version | grep NVIM | awk '{ print $2 }')
        release=$(curl -fsSL https://github.com/neovim/neovim/releases/latest | grep '<title>' | awk '{ print $3 }')
        if [ "$local" != "$release" ]; then
            echo 'Please download neovim in below link.'
            echo -e "\thttps://github.com/neovim/neovim/releases/latest"
        else
            echo "Neovim is up to date ($local)."
        fi
    fi
fi

which juliaup &> /dev/null
if [ $? -eq 0 ]; then
    juliaup update
fi

which zsh &>/dev/null
if [ $? == 0 ]; then
    /bin/zsh -c "source ~/.zshrc; which omz > /dev/null 2>&1"
    if [ $? == 0 ]; then
        /bin/zsh -c "source ~/.zshrc; omz update" &
        targetPID=$!
        for (( i=0 ; i<=10 ; i++ )); do
            ps | grep $targetPID &> /dev/null
            if [ $? -ne 0 ]; then
                break
            fi
            sleep 1
        done
        ps | grep $targetPID &> /dev/null
        if [ $? -eq 0 ]; then
            kill $targetPID &> /dev/null
        fi
    fi
fi

which flutter &>/dev/null
if [ $? == 0 ]; then
    flutter upgrade
    flutter doctor
fi

which flatpak &> /dev/null
if [ $? -eq 0 ]; then
    flatpak update
fi

if [ -x /usr/bin/vmplayer ]; then
    if [ -d /lib/modules/$(uname -r) ]; then
        vm_count=$(ls /lib/modules/$(uname -r)/misc 2> /dev/null | grep -c 'vm')
        if [ $vm_count -ne 2 ]; then
            echo 'Installing VMware modules: vmnet, vmmon'
            sudo vmware-modconfig --console --install-all
        else
            echo 'Requirement already satisfied: vmware-modconfig'
        fi
    else
        echo 'error: please reboot system first to applying kernel updates!'
    fi
fi

if [ -d ~/snap/snd-hda-codec-cs8409 ]; then
    ls /lib/modules/$(uname -r)/updates 2> /dev/null | grep snd-hda-codec-cs8409.ko &> /dev/null
    if [ $? -ne 0 ]; then
        echo -n 'Would you like to re-install CS8409 sound driver? (Y/n) > '
        read n
        if [ "$n" == "n" -o "$n" == "N" ]; then
            echo 'User Abort.'
        else
            ~/Documents/Release/ShellScript/Operating\ System/Linux/General/Install\ CS8409\ Sound\ Driver "-y"
        fi
    else
        echo 'Requirement already satisfied: snd-hda-codec-cs8409'
    fi
fi


#!/bin/bash

cd ~/Downloads
if [ $? -ne 0 ]; then
    exit 1
fi

relnotes="https://help.perforce.com/helix-core/release-notes/current/relnotes.txt"
downsrc="https://www.perforce.com/downloads/perforce/rUNKNOWN/bin.linux26x86_64/helix-core-server.tgz"
current_revision=$(p4 -V 2> /dev/null | tail -1 | sed 's/Rev. P4\///' | sed 's/ /\//g' | awk -F '/' '{ print $3 }' || echo '0')
new_revision=0
index=0

thisyear_version=( $(curl -fsSL $relnotes | grep "Major new functionality in $(/usr/bin/date '+%Y')" | sed "s/Major new functionality in //" | awk '{ print $1 }' | sed "s/($(date +'%Y')//" | sed 's/20//') )
lastyear_version=( $(curl -fsSL $relnotes | grep "Major new functionality in $(/usr/bin/date '+%Y' -d '1 year ago')" | sed "s/Major new functionality in //" | awk '{ print $1 }' | sed "s/($(date +'%Y' -d '1 year ago')//" | sed 's/20//') )
thisyear_revision=( $(curl -fsSL $relnotes | grep "Major new functionality in $(/usr/bin/date '+%Y')" | sed "s/Major new functionality in //" | awk '{ print $2 }' | awk -F '/' '{ print $2 }' | sed 's/)$//') )
lastyear_revision=( $(curl -fsSL $relnotes | grep "Major new functionality in $(/usr/bin/date '+%Y' -d '1 year ago')" | sed "s/Major new functionality in //" | awk '{ print $2 }' | awk -F '/' '{ print $2 }' | sed 's/)$//') )

if [ "${#thisyear_revision[@]}" -gt 0 ]; then
    index=0
    for i in "${thisyear_revision[@]}"; do
        index=$(expr $index + 1)
        if [ $current_revision -lt $i ]; then
            new_revision=$i
            break
        fi
    done
    if [ $new_revision -gt 0 ]; then
        echo 'Perforce (P4) release list.'
        echo "--- $(/usr/bin/date '+%Y') ---"
        curl -fsSL $relnotes | grep "Major new functionality in $(/usr/bin/date '+%Y')" | sed "s/Major new functionality in //"
        echo "targetting $new_revision: $thisyear_version[$index]"
        downsrc=$(echo $downsrc | sed "s/UNKNOWN/$thisyear_version[$index]/")
        curl -fsSL $downsrc > helix-core-server.tgz
    fi
elif [ "${#lastyear_revision[@]}" -gt 0 ]; then
    index=0
    for i in "${lastyear_revision[@]}"; do
        index=$(expr $index + 1)
        if [ $current_revision -lt $i ]; then
            new_revision=$i
            break
        fi
    done
    if [ $new_revision -gt 0 ]; then
        echo 'Perforce (P4) release list.'
        echo "--- $(/usr/bin/date '+%Y' -d '1 year ago') ---"
        curl -fsSL $relnotes | grep "Major new functionality in $(/usr/bin/date '+%Y')" | sed "s/Major new functionality in //"
        echo "targetting $new_revision: $lastyear_version[$index]"
        downsrc=$(echo $downsrc | sed "s/UNKNOWN/$thisyear_version[$index]/")
        curl -fsSL $downsrc > helix-core-server.tgz
    fi
fi

if [ -r helix-core-server.tgz ]; then
    echo 'This action will require root permission.'
    tar -zxf helix-core-server.tgz
    sudo mv p4* /usr/local/bin
    rm -rf *.txt helix-core-server*
else
    which p4 &> /dev/null
    if [ $? -eq 0 ]; then
        echo "Requirements already satisfied: $(p4 -V | tail -1 | sed "s/Rev. P4\/LINUX26X86_64\///")"
        exit 0
    else
        echo 'Failed to install Perforce (P4). Check fURL or permission.' >&2
        exit 1
    fi
fi


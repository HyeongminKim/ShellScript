#!/bin/bash

addr_mode=0
mask=-127
chk_url="ipinfo.io/ip"
net_device="eth0"

if [ "$1" == "--help" ]; then
    echo "$0 [options]"
    echo -e " --help\t\tShow this help message"
    echo -e " --public\tShow public IPv4 address (default: private)"
    echo -e " --all\t\tShow both IPv4 address if possable"
    echo -e " --mask=N\tMask N octet address (default: 2)"
    echo -e " --mask=NM\tMask N address public & Mask M address private"
    echo -e "\t\t\`--mask=NM\` option will trigger \`--all\` flags"
    exit 0
fi

function mask_addr() {
    if [ $1 -eq 0 ]; then
        echo "$2"
    elif [ $1 -eq 1 ]; then
        printf '♡.%s.%s.%s\n' $(echo $2 | awk -F. '{ print $2 }') $(echo $2 | awk -F. '{ print $3 }') $(echo $2 | awk -F. '{ print $4 }')
    elif [ $1 -eq 2 ]; then
        printf '%s.♡.%s.%s\n' $(echo $2 | awk -F. '{ print $1 }') $(echo $2 | awk -F. '{ print $3 }') $(echo $2 | awk -F. '{ print $4 }')
    elif [ $1 -eq 3 ]; then
        printf '%s.%s.♡.%s\n' $(echo $2 | awk -F. '{ print $1 }') $(echo $2 | awk -F. '{ print $2 }') $(echo $2 | awk -F. '{ print $4 }')
    elif [ $1 -eq 4 ]; then
        printf '%s.%s.%s.♡\n' $(echo $2 | awk -F. '{ print $1 }') $(echo $2 | awk -F. '{ print $2 }') $(echo $2 | awk -F. '{ print $3 }')
    elif [ $1 -eq -127 ]; then
        echo "$2"
    else
        echo "$2"

        if [ $mask -gt 4 -o $mask -lt 0 ]; then
            echo "error: index out of bounds. 0...4 <> $mask" >&2
            echo "IPv4 address mask function fault." >&2
        fi

    fi
}

function net_device_select() {
    ifconfig eth0 &>/dev/null
    if [ $? -ne 0 ]; then
        ifconfig wlan0 &>/dev/null
        if [ $? -eq 0 ]; then
            net_device="wlan0"
        else
            echo 'error: unknown network interface or device detected. please add below kernel params in your GRUB configuration.' >&2
            echo "GRUB_CMDLINE_LINUX+='net.ifnames=0 biosdevname=0'" >&2
        fi
    fi
}

params=("${@}")
for i in "${params[@]}"; do
    case $i in
    "--public")
        addr_mode=1
        ;;
    "--all")
        addr_mode=2
        ;;
    "--mask=1")
        mask=1
        ;;
    "--mask" | "--mask=2")
        mask=2
        ;;
    "--mask=3")
        mask=3
        ;;
    "--mask=4")
        mask=4
        ;;
    "--mask=01")
        mask=-1
        ;;
    "--mask=02")
        mask=-2
        ;;
    "--mask=03")
        mask=-3
        ;;
    "--mask=04")
        mask=-4
        ;;
    "--mask=10")
        mask=10
        ;;
    "--mask=12")
        mask=12
        ;;
    "--mask=13")
        mask=13
        ;;
    "--mask=14")
        mask=14
        ;;
    "--mask=20")
        mask=20
        ;;
    "--mask=21")
        mask=21
        ;;
    "--mask=23")
        mask=23
        ;;
    "--mask=24")
        mask=24
        ;;
    "--mask=30")
        mask=30
        ;;
    "--mask=31")
        mask=31
        ;;
    "--mask=32")
        mask=32
        ;;
    "--mask=34")
        mask=34
        ;;
    "--mask=40")
        mask=40
        ;;
    "--mask=41")
        mask=41
        ;;
    "--mask=42")
        mask=42
        ;;
    "--mask=43")
        mask=43
        ;;
    *)
        echo "unknown option: $i. Skipping." >&2
        ;;
    esac
done

if [ $mask -ge -4 ]; then
    addr_mode=2
fi

if [ $addr_mode -eq 1 ]; then
    cnt_ip="$(curl -s $chk_url)"
    echo -n 'Public: '
    mask_addr $mask $cnt_ip
elif [ $addr_mode -eq 0 ]; then
    net_device_select
    cnt_ip=$(ifconfig $net_device | sed -n '2p' | awk '{ print $2 }')
    diff_ip="$(curl -s $chk_url)"
    if [ "$cnt_ip" == "$diff_ip" ]; then
        echo -n 'Public: '
        mask_addr $mask $cnt_ip
    else
        echo -n 'Private: '
        mask_addr $mask $cnt_ip
    fi
elif [ $addr_mode -eq 2 ]; then
    net_device_select

    mask_public=$mask
    mask_private=$mask

    if [ $mask -eq -1 ]; then
        mask_public=0
        mask_private=1
    elif [ $mask -eq -2 ]; then
        mask_public=0
        mask_private=2
    elif [ $mask -eq -3 ]; then
        mask_public=0
        mask_private=3
    elif [ $mask -eq -4 ]; then
        mask_public=0
        mask_private=4
    elif [ $mask -eq 10 ]; then
        mask_public=1
        mask_private=0
    elif [ $mask -eq 12 ]; then
        mask_public=1
        mask_private=2
    elif [ $mask -eq 13 ]; then
        mask_public=1
        mask_private=3
    elif [ $mask -eq 14 ]; then
        mask_public=1
        mask_private=4
    elif [ $mask -eq 20 ]; then
        mask_public=2
        mask_private=0
    elif [ $mask -eq 21 ]; then
        mask_public=2
        mask_private=1
    elif [ $mask -eq 23 ]; then
        mask_public=2
        mask_private=3
    elif [ $mask -eq 24 ]; then
        mask_public=2
        mask_private=4
    elif [ $mask -eq 30 ]; then
        mask_public=3
        mask_private=0
    elif [ $mask -eq 31 ]; then
        mask_public=3
        mask_private=1
    elif [ $mask -eq 32 ]; then
        mask_public=3
        mask_private=2
    elif [ $mask -eq 34 ]; then
        mask_public=3
        mask_private=4
    elif [ $mask -eq 40 ]; then
        mask_public=4
        mask_private=0
    elif [ $mask -eq 41 ]; then
        mask_public=4
        mask_private=1
    elif [ $mask -eq 42 ]; then
        mask_public=4
        mask_private=2
    elif [ $mask -eq 43 ]; then
        mask_public=4
        mask_private=3
    fi

    cnt_ip=$(ifconfig $net_device | sed -n '2p' | awk '{ print $2 }')
    diff_ip="$(curl -s $chk_url)"
    if [ "$cnt_ip" == "$diff_ip" ]; then
        echo -n 'Public: '
        mask_addr $mask_public $cnt_ip
    else
        echo -n 'Public: '
        mask_addr $mask_public $diff_ip
        echo -n 'Private: '
        mask_addr $mask_private $cnt_ip
    fi
fi
